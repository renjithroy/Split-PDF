{"ast":null,"code":"var _jsxFileName = \"/Users/renjithroy/Documents/PDF Extractor/frontend/src/components/PdfViewer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Document, Page } from \"react-pdf\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst base64ToUint8Array = base64 => {\n  const binaryString = window.atob(base64);\n  const len = binaryString.length;\n  const bytes = new Uint8Array(len);\n  for (let i = 0; i < len; i++) {\n    bytes[i] = binaryString.charCodeAt(i);\n  }\n  return bytes;\n};\nconst PdfViewer = ({\n  numPages,\n  pdfBase64\n}) => {\n  _s();\n  const [selectedPages, setSelectedPages] = useState([]);\n  const [pdfFile, setPdfFile] = useState(null);\n  const [pdfUrl, setPdfUrl] = useState(\"\");\n  useEffect(() => {\n    const uint8Array = base64ToUint8Array(pdfBase64);\n    const blob = new Blob([uint8Array], {\n      type: \"application/pdf\"\n    });\n    const url = URL.createObjectURL(blob);\n    setPdfFile(blob);\n    setPdfUrl(url);\n  }, [pdfBase64]);\n  const handlePageSelection = pageNumber => {\n    setSelectedPages(prevSelected => prevSelected.includes(pageNumber) ? prevSelected.filter(page => page !== pageNumber) : [...prevSelected, pageNumber]);\n  };\n  const handleExtractPages = async () => {\n    if (selectedPages.length === 0) {\n      alert(\"Please select at least one page to extract.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"pdfFile\", pdfFile);\n    formData.append(\"selectedPages\", JSON.stringify(selectedPages));\n    try {\n      const response = await axios.post(\"http://localhost:5000/extract-pages\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        },\n        responseType: \"blob\"\n      });\n      const blob = new Blob([response.data], {\n        type: \"application/pdf\"\n      });\n      const url = URL.createObjectURL(blob);\n      window.open(url);\n    } catch (error) {\n      console.error(\"Error extracting pages:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pdf-viewer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Number of Pages: \", numPages]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Document, {\n      file: pdfUrl,\n      children: Array.from({\n        length: numPages\n      }, (_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Page, {\n          pageNumber: i + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: selectedPages.includes(i + 1),\n            onChange: () => handlePageSelection(i + 1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), \"Page \", i + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleExtractPages,\n        children: \"Extract Pages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(PdfViewer, \"S3BGU6uvDwfYyVhYJQUCs4IHIOw=\");\n_c = PdfViewer;\nexport default PdfViewer;\nvar _c;\n$RefreshReg$(_c, \"PdfViewer\");","map":{"version":3,"names":["React","useState","useEffect","Document","Page","axios","jsxDEV","_jsxDEV","base64ToUint8Array","base64","binaryString","window","atob","len","length","bytes","Uint8Array","i","charCodeAt","PdfViewer","numPages","pdfBase64","_s","selectedPages","setSelectedPages","pdfFile","setPdfFile","pdfUrl","setPdfUrl","uint8Array","blob","Blob","type","url","URL","createObjectURL","handlePageSelection","pageNumber","prevSelected","includes","filter","page","handleExtractPages","alert","formData","FormData","append","JSON","stringify","response","post","headers","responseType","data","open","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","file","Array","from","_","checked","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/renjithroy/Documents/PDF Extractor/frontend/src/components/PdfViewer.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Document, Page } from \"react-pdf\";\nimport axios from \"axios\";\n\nconst base64ToUint8Array = (base64) => {\n  const binaryString = window.atob(base64);\n  const len = binaryString.length;\n  const bytes = new Uint8Array(len);\n  for (let i = 0; i < len; i++) {\n    bytes[i] = binaryString.charCodeAt(i);\n  }\n  return bytes;\n};\n\nconst PdfViewer = ({ numPages, pdfBase64 }) => {\n  const [selectedPages, setSelectedPages] = useState([]);\n  const [pdfFile, setPdfFile] = useState(null);\n  const [pdfUrl, setPdfUrl] = useState(\"\");\n\n  useEffect(() => {\n    const uint8Array = base64ToUint8Array(pdfBase64);\n    const blob = new Blob([uint8Array], { type: \"application/pdf\" });\n    const url = URL.createObjectURL(blob);\n    setPdfFile(blob);\n    setPdfUrl(url);\n  }, [pdfBase64]);\n\n  const handlePageSelection = (pageNumber) => {\n    setSelectedPages((prevSelected) =>\n      prevSelected.includes(pageNumber)\n        ? prevSelected.filter((page) => page !== pageNumber)\n        : [...prevSelected, pageNumber]\n    );\n  };\n\n  const handleExtractPages = async () => {\n    if (selectedPages.length === 0) {\n      alert(\"Please select at least one page to extract.\");\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append(\"pdfFile\", pdfFile);\n    formData.append(\"selectedPages\", JSON.stringify(selectedPages));\n\n    try {\n      const response = await axios.post(\"http://localhost:5000/extract-pages\", formData, {\n        headers: { \"Content-Type\": \"multipart/form-data\" },\n        responseType: \"blob\",\n      });\n\n      const blob = new Blob([response.data], { type: \"application/pdf\" });\n      const url = URL.createObjectURL(blob);\n      window.open(url);\n    } catch (error) {\n      console.error(\"Error extracting pages:\", error);\n    }\n  };\n\n  return (\n    <div className=\"pdf-viewer\">\n      <h2>Number of Pages: {numPages}</h2>\n      <Document file={pdfUrl}>\n        {Array.from({ length: numPages }, (_, i) => (\n          <div key={i}>\n            <Page pageNumber={i + 1} />\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={selectedPages.includes(i + 1)}\n                onChange={() => handlePageSelection(i + 1)}\n              />\n              Page {i + 1}\n            </label>\n          </div>\n        ))}\n      </Document>\n      <div>\n        <button onClick={handleExtractPages}>Extract Pages</button>\n      </div>\n    </div>\n  );\n};\n\nexport default PdfViewer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}