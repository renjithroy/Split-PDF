{"ast":null,"code":"var _jsxFileName = \"/Users/renjithroy/Documents/PDF Extractor/frontend/src/components/PdfViewer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PdfViewer = ({\n  numPages,\n  images\n}) => {\n  _s();\n  const [selectedPages, setSelectedPages] = useState([]);\n  const handlePageSelection = pageNumber => {\n    if (selectedPages.includes(pageNumber)) {\n      setSelectedPages(prevSelected => prevSelected.filter(page => page !== pageNumber));\n    } else {\n      setSelectedPages(prevSelected => [...prevSelected, pageNumber]);\n    }\n  };\n\n  // Function to fetch individual page images\n  const fetchPageImage = async pageNumber => {\n    try {\n      const response = await axios.get(`http://localhost:5000/page/${pageNumber}`, {\n        responseType: 'arraybuffer'\n      });\n\n      // Convert the received image data (base64 string) to a data URL\n      const imageDataUrl = `data:image/png;base64,${Buffer.from(response.data).toString('base64')}`;\n\n      // Add the image data URL to the images array\n      setImages(prevImages => [...prevImages, imageDataUrl]);\n    } catch (error) {\n      console.error('Error fetching page image:', error);\n    }\n  };\n\n  // Function to fetch page images when the component mounts\n  useEffect(() => {\n    const fetchImages = async () => {\n      for (let pageNumber = 1; pageNumber <= numPages; pageNumber++) {\n        await fetchPageImage(pageNumber);\n      }\n    };\n    fetchImages();\n  }, [numPages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pdf-viewer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Number of Pages: \", numPages]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), images.map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        alt: `Page ${index + 1}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: selectedPages.includes(index + 1),\n          onChange: () => handlePageSelection(index + 1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this), \"Page \", index + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => console.log(selectedPages),\n        children: \"Extract Pages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(PdfViewer, \"m2piK+2zEDNTT4E+WPCCDJgibcQ=\");\n_c = PdfViewer;\nexport default PdfViewer;\nvar _c;\n$RefreshReg$(_c, \"PdfViewer\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PdfViewer","numPages","images","_s","selectedPages","setSelectedPages","handlePageSelection","pageNumber","includes","prevSelected","filter","page","fetchPageImage","response","axios","get","responseType","imageDataUrl","Buffer","from","data","toString","setImages","prevImages","error","console","useEffect","fetchImages","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","image","index","src","alt","type","checked","onChange","onClick","log","_c","$RefreshReg$"],"sources":["/Users/renjithroy/Documents/PDF Extractor/frontend/src/components/PdfViewer.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst PdfViewer = ({ numPages, images }) => {\n\n    const [selectedPages, setSelectedPages] = useState([]);\n\n    const handlePageSelection = (pageNumber) => {\n        if (selectedPages.includes(pageNumber)) {\n            setSelectedPages((prevSelected) =>\n                prevSelected.filter((page) => page !== pageNumber)\n            );\n        } else {\n            setSelectedPages((prevSelected) => [...prevSelected, pageNumber]);\n        }\n    };\n\n    // Function to fetch individual page images\n    const fetchPageImage = async (pageNumber) => {\n        try {\n            const response = await axios.get(`http://localhost:5000/page/${pageNumber}`, {\n                responseType: 'arraybuffer',\n            });\n\n            // Convert the received image data (base64 string) to a data URL\n            const imageDataUrl = `data:image/png;base64,${Buffer.from(response.data).toString('base64')}`;\n\n            // Add the image data URL to the images array\n            setImages((prevImages) => [...prevImages, imageDataUrl]);\n        } catch (error) {\n            console.error('Error fetching page image:', error);\n        }\n    };\n\n    // Function to fetch page images when the component mounts\n    useEffect(() => {\n        const fetchImages = async () => {\n            for (let pageNumber = 1; pageNumber <= numPages; pageNumber++) {\n                await fetchPageImage(pageNumber);\n            }\n        };\n\n        fetchImages();\n    }, [numPages]);\n\n    return (\n        <div className=\"pdf-viewer\">\n            <h2>Number of Pages: {numPages}</h2>\n            {images.map((image, index) => (\n                <div key={index}>\n                    <img src={image} alt={`Page ${index + 1}`} />\n                    <label>\n                        <input\n                            type=\"checkbox\"\n                            checked={selectedPages.includes(index + 1)}\n                            onChange={() => handlePageSelection(index + 1)}\n                        />\n                        Page {index + 1}\n                    </label>\n                </div>\n            ))}\n            <div>\n                <button onClick={() => console.log(selectedPages)}>Extract Pages</button>\n            </div>\n        </div>\n    );\n};\n\nexport default PdfViewer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}