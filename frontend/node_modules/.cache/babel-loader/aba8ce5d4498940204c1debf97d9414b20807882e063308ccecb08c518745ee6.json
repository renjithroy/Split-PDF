{"ast":null,"code":"var _jsxFileName = \"/Users/renjithroy/Documents/PDF Extractor/frontend/src/components/PdfViewer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PdfViewer = ({\n  numPages\n}) => {\n  _s();\n  const [selectedPages, setSelectedPages] = useState([]);\n  const [imageUrls, setImageUrls] = useState([]);\n  const handlePageSelection = pageNumber => {\n    if (selectedPages.includes(pageNumber)) {\n      setSelectedPages(prevSelected => prevSelected.filter(page => page !== pageNumber));\n    } else {\n      setSelectedPages(prevSelected => [...prevSelected, pageNumber]);\n    }\n  };\n  const fetchPageImage = async pageNumber => {\n    try {\n      const response = await axios.get(`http://localhost:5000/page/${pageNumber}`, {\n        responseType: 'arraybuffer'\n      });\n\n      // Convert the received image data (base64 string) to a data URL\n      const imageDataUrl = `data:image/png;base64,${Buffer.from(response.data).toString('base64')}`;\n\n      // Add the image data URL to the imageUrls array\n      setImageUrls(prevUrls => [...prevUrls, imageDataUrl]);\n    } catch (error) {\n      console.error('Error fetching page image:', error);\n    }\n  };\n  useEffect(() => {\n    const fetchImages = async () => {\n      for (let pageNumber = 1; pageNumber <= numPages; pageNumber++) {\n        await fetchPageImage(pageNumber);\n      }\n    };\n    fetchImages();\n  }, [numPages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pdf-viewer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Number of Pages: \", numPages]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), imageUrls.map((imageUrl, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageUrl,\n        alt: `Page ${index + 1}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: selectedPages.includes(index + 1),\n          onChange: () => handlePageSelection(index + 1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), \"Page \", index + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => console.log(selectedPages),\n        children: \"Extract Pages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(PdfViewer, \"oCqwJiKNccDAduGJu9qCxJXUWkg=\");\n_c = PdfViewer;\nexport default PdfViewer;\nvar _c;\n$RefreshReg$(_c, \"PdfViewer\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","PdfViewer","numPages","_s","selectedPages","setSelectedPages","imageUrls","setImageUrls","handlePageSelection","pageNumber","includes","prevSelected","filter","page","fetchPageImage","response","get","responseType","imageDataUrl","Buffer","from","data","toString","prevUrls","error","console","fetchImages","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","imageUrl","index","src","alt","type","checked","onChange","onClick","log","_c","$RefreshReg$"],"sources":["/Users/renjithroy/Documents/PDF Extractor/frontend/src/components/PdfViewer.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst PdfViewer = ({ numPages }) => {\n  const [selectedPages, setSelectedPages] = useState([]);\n  const [imageUrls, setImageUrls] = useState([]);\n\n  const handlePageSelection = (pageNumber) => {\n    if (selectedPages.includes(pageNumber)) {\n      setSelectedPages((prevSelected) =>\n        prevSelected.filter((page) => page !== pageNumber)\n      );\n    } else {\n      setSelectedPages((prevSelected) => [...prevSelected, pageNumber]);\n    }\n  };\n\n  const fetchPageImage = async (pageNumber) => {\n    try {\n      const response = await axios.get(`http://localhost:5000/page/${pageNumber}`, {\n        responseType: 'arraybuffer',\n      });\n\n      // Convert the received image data (base64 string) to a data URL\n      const imageDataUrl = `data:image/png;base64,${Buffer.from(response.data).toString('base64')}`;\n\n      // Add the image data URL to the imageUrls array\n      setImageUrls((prevUrls) => [...prevUrls, imageDataUrl]);\n    } catch (error) {\n      console.error('Error fetching page image:', error);\n    }\n  };\n\n  useEffect(() => {\n    const fetchImages = async () => {\n      for (let pageNumber = 1; pageNumber <= numPages; pageNumber++) {\n        await fetchPageImage(pageNumber);\n      }\n    };\n\n    fetchImages();\n  }, [numPages]);\n\n  return (\n    <div className=\"pdf-viewer\">\n      <h2>Number of Pages: {numPages}</h2>\n      {imageUrls.map((imageUrl, index) => (\n        <div key={index}>\n          <img src={imageUrl} alt={`Page ${index + 1}`} />\n          <label>\n            <input\n              type=\"checkbox\"\n              checked={selectedPages.includes(index + 1)}\n              onChange={() => handlePageSelection(index + 1)}\n            />\n            Page {index + 1}\n          </label>\n        </div>\n      ))}\n      <div>\n        <button onClick={() => console.log(selectedPages)}>Extract Pages</button>\n      </div>\n    </div>\n  );\n};\n\nexport default PdfViewer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}