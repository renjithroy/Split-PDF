{"ast":null,"code":"var _jsxFileName = \"/Users/renjithroy/Documents/PDF Extractor/frontend/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport PdfViewer from \"./components/PdfViewer\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [numPages, setNumPages] = useState(null);\n  const [selectedPages, setSelectedPages] = useState([]);\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handleCheckboxChange = page => {\n    setSelectedPages(prevSelectedPages => prevSelectedPages.includes(page) ? prevSelectedPages.filter(p => p !== page) : [...prevSelectedPages, page]);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!selectedFile) {\n      alert(\"Please select a PDF file.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"pdfFile\", selectedFile);\n    formData.append(\"selectedPages\", JSON.stringify(selectedPages));\n    try {\n      const response = await axios.post(\"http://localhost:5000/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      console.log(response.data); // Log the response from the backend\n\n      const numPages = response.data.numPages;\n      console.log(\"numPages on frontend\");\n      console.log(response.data.numPages);\n      // Handle the response and display the visual representation of all pages\n      // and enable page selection as needed\n    } catch (error) {\n      alert(\"Error uploading the file:\", error);\n      // Handle errors, show error messages, etc.\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Extract Pages from your PDF!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          className: \"form-control-file\",\n          name: \"pdfFile\",\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Select Pages to Include:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), [...Array(numPages)].map((_, page) => /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Page \", page + 1, /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              value: page + 1,\n              checked: selectedPages.includes(page + 1),\n              onChange: () => handleCheckboxChange(page + 1)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this)]\n          }, page + 1, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Submit PDF\",\n          className: \"btn btn-default\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), numPages !== null && /*#__PURE__*/_jsxDEV(PdfViewer, {\n      numPages: numPages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9MgrW9sKZnYWt98TrtmgbDuLN7M=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","PdfViewer","jsxDEV","_jsxDEV","App","_s","selectedFile","setSelectedFile","numPages","setNumPages","selectedPages","setSelectedPages","handleFileChange","event","target","files","handleCheckboxChange","page","prevSelectedPages","includes","filter","p","handleSubmit","preventDefault","alert","formData","FormData","append","JSON","stringify","response","post","headers","console","log","data","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","name","onChange","Array","map","_","value","checked","_c","$RefreshReg$"],"sources":["/Users/renjithroy/Documents/PDF Extractor/frontend/src/App.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport PdfViewer from \"./components/PdfViewer\";\nimport './App.css';\n\nexport default function App() {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [numPages, setNumPages] = useState(null);\n  const [selectedPages, setSelectedPages] = useState([]);\n\n  const handleFileChange = (event) => {\n    setSelectedFile(event.target.files[0]);\n  };\n\n  const handleCheckboxChange = (page) => {\n    setSelectedPages((prevSelectedPages) =>\n      prevSelectedPages.includes(page)\n        ? prevSelectedPages.filter((p) => p !== page)\n        : [...prevSelectedPages, page]\n    );\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    if (!selectedFile) {\n      alert(\"Please select a PDF file.\");\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append(\"pdfFile\", selectedFile);\n    formData.append(\"selectedPages\", JSON.stringify(selectedPages));\n\n    try {\n      const response = await axios.post(\"http://localhost:5000/upload\", formData, {\n        headers: { \"Content-Type\": \"multipart/form-data\" },\n      });\n\n      console.log(response.data); // Log the response from the backend\n\n      const numPages = response.data.numPages;\n      console.log(\"numPages on frontend\");\n      console.log(response.data.numPages);\n      // Handle the response and display the visual representation of all pages\n      // and enable page selection as needed\n\n    } catch (error) {\n      alert(\"Error uploading the file:\", error);\n      // Handle errors, show error messages, etc.\n    }\n  };\n\n  return (\n    <div className=\"main\">\n      <h1>Extract Pages from your PDF!</h1>\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <input type=\"file\" className=\"form-control-file\" name=\"pdfFile\" onChange={handleFileChange} />\n          <br />\n          <div>\n            <p>Select Pages to Include:</p>\n            {[...Array(numPages)].map((_, page) => (\n              <label key={page + 1}>\n                Page {page + 1}\n                <input\n                  type=\"checkbox\"\n                  value={page + 1}\n                  checked={selectedPages.includes(page + 1)}\n                  onChange={() => handleCheckboxChange(page + 1)}\n                />\n              </label>\n            ))}\n          </div>\n          <br />\n          <input type=\"submit\" value=\"Submit PDF\" className=\"btn btn-default\" />\n        </div>\n      </form>\n      {numPages !== null && <PdfViewer numPages={numPages} />}\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}