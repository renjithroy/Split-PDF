{"ast":null,"code":"var _jsxFileName = \"/Users/renjithroy/Documents/PDF Extractor/frontend/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { PDFDocument } from \"pdf-lib\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [numPages, setNumPages] = useState(null);\n  const [selectedPages, setSelectedPages] = useState([]);\n  const fileInputRef = useRef(null);\n  useEffect(() => {\n    if (selectedFile) {\n      const reader = new FileReader();\n      reader.onload = async () => {\n        const pdfBuffer = reader.result;\n        try {\n          const pdfDoc = await PDFDocument.load(pdfBuffer);\n          const numPages = pdfDoc.getPageCount();\n          console.log(\"Frontend Page no: \" + numPages);\n          setNumPages(numPages);\n        } catch {\n          alert(\"File type not supported\");\n          resetForm();\n          return;\n        }\n      };\n      reader.readAsArrayBuffer(selectedFile);\n    }\n  }, [selectedFile]);\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handleCheckboxChange = (event, page) => {\n    const isChecked = event.target.checked;\n    const pageNumber = page;\n    setSelectedPages(prevSelectedPages => isChecked ? [...prevSelectedPages, pageNumber] : prevSelectedPages.filter(p => p !== pageNumber));\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!selectedFile) {\n      alert(\"Please select a PDF file.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"pdfFile\", selectedFile);\n\n    // Send selectedPages separately as a JSON object\n    const selectedPagesData = {\n      selectedPages: selectedPages\n    };\n    try {\n      const response = await axios.post(\"http://localhost:5000/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        },\n        params: selectedPagesData,\n        responseType: \"blob\"\n      });\n      console.log(response.data);\n      const blob = new Blob([response.data], {\n        type: \"application/pdf\"\n      });\n      const url = URL.createObjectURL(blob);\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.setAttribute(\"download\", \"modified.pdf\");\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      resetForm();\n    } catch (error) {\n      alert(\"Error uploading the file:\", error);\n    }\n  };\n  const resetForm = () => {\n    // Reset the file input value\n    if (fileInputRef.current) {\n      fileInputRef.current.value = \"\";\n    }\n    setSelectedFile(null);\n    setNumPages(null);\n    setSelectedPages([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Extract Pages from your PDF!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ref: fileInputRef,\n          type: \"file\",\n          className: \"form-control-file\",\n          name: \"pdfFile\",\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), numPages !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"pages-label\",\n            children: \"Select Pages to Include:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), Array.from({\n            length: numPages\n          }, (_, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"page-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Page \", index + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              className: \"form-checkbox\",\n              name: \"selectCheckbox\",\n              checked: selectedPages.includes(index + 1),\n              onChange: event => handleCheckboxChange(event, index + 1)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Download Modified PDF\",\n          className: \"btn btn-default\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"907ycvjRHCcxRjTpr8HbYQqbQTI=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","PDFDocument","jsxDEV","_jsxDEV","App","_s","selectedFile","setSelectedFile","numPages","setNumPages","selectedPages","setSelectedPages","fileInputRef","reader","FileReader","onload","pdfBuffer","result","pdfDoc","load","getPageCount","console","log","alert","resetForm","readAsArrayBuffer","handleFileChange","event","target","files","handleCheckboxChange","page","isChecked","checked","pageNumber","prevSelectedPages","filter","p","handleSubmit","preventDefault","formData","FormData","append","selectedPagesData","response","post","headers","params","responseType","data","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","href","setAttribute","body","appendChild","click","removeChild","error","current","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","ref","name","onChange","Array","from","length","_","index","includes","_c","$RefreshReg$"],"sources":["/Users/renjithroy/Documents/PDF Extractor/frontend/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { PDFDocument } from \"pdf-lib\";\nimport \"./App.css\";\n\nexport default function App() {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [numPages, setNumPages] = useState(null);\n  const [selectedPages, setSelectedPages] = useState([]);\n  const fileInputRef = useRef(null);\n\n  useEffect(() => {\n    if (selectedFile) {\n      const reader = new FileReader();\n\n      reader.onload = async () => {\n        const pdfBuffer = reader.result;\n        try {\n          const pdfDoc = await PDFDocument.load(pdfBuffer);\n          const numPages = pdfDoc.getPageCount();\n          console.log(\"Frontend Page no: \" + numPages);\n          setNumPages(numPages);\n        } catch {\n          alert(\"File type not supported\");\n          resetForm();\n          return;\n        }\n      };\n\n      reader.readAsArrayBuffer(selectedFile);\n    }\n  }, [selectedFile]);\n\n  const handleFileChange = (event) => {\n    setSelectedFile(event.target.files[0]);\n  };\n\n  const handleCheckboxChange = (event, page) => {\n    const isChecked = event.target.checked;\n    const pageNumber = page;\n\n    setSelectedPages((prevSelectedPages) =>\n      isChecked\n        ? [...prevSelectedPages, pageNumber]\n        : prevSelectedPages.filter((p) => p !== pageNumber)\n    );\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    if (!selectedFile) {\n      alert(\"Please select a PDF file.\");\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append(\"pdfFile\", selectedFile);\n\n    // Send selectedPages separately as a JSON object\n    const selectedPagesData = {\n      selectedPages: selectedPages,\n    };\n\n    try {\n      const response = await axios.post(\"http://localhost:5000/upload\", formData, {\n        headers: { \"Content-Type\": \"multipart/form-data\" },\n        params: selectedPagesData,\n        responseType: \"blob\",\n      });\n\n      console.log(response.data);\n      const blob = new Blob([response.data], { type: \"application/pdf\" });\n      const url = URL.createObjectURL(blob);\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.setAttribute(\"download\", \"modified.pdf\");\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n\n      resetForm();\n\n    } catch (error) {\n      alert(\"Error uploading the file:\", error);\n    }\n  };\n\n  const resetForm = () => {\n    // Reset the file input value\n    if (fileInputRef.current) {\n      fileInputRef.current.value = \"\";\n    }\n    setSelectedFile(null);\n    setNumPages(null);\n    setSelectedPages([]);\n  };\n\n  return (\n    <div className=\"main\">\n      <h1>Extract Pages from your PDF!</h1>\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <input ref={fileInputRef} type=\"file\" className=\"form-control-file\" name=\"pdfFile\" onChange={handleFileChange} />\n          <br />\n          {numPages !== null && (\n            <div>\n              <p className=\"pages-label\">Select Pages to Include:</p>\n              {Array.from({ length: numPages }, (_, index) => (\n                <label key={index} className=\"page-label\">\n                  <span>Page {index + 1}</span>\n                  <input\n                    type=\"checkbox\"\n                    className=\"form-checkbox\"\n                    name=\"selectCheckbox\"\n                    checked={selectedPages.includes(index + 1)}\n                    onChange={(event) => handleCheckboxChange(event, index + 1)}\n                  />\n                </label>\n              ))}\n              <br />\n              <br />\n            </div>\n          )}\n          <input type=\"submit\" value=\"Download Modified PDF\" className=\"btn btn-default\" />\n        </div>\n      </form>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}