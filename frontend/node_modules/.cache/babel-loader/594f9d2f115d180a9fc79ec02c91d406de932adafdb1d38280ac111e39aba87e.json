{"ast":null,"code":"var _jsxFileName = \"/Users/renjithroy/Documents/PDF Extractor/frontend/src/components/PdfViewer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PdfViewer = ({\n  numPages,\n  pdfBase64\n}) => {\n  _s();\n  const [selectedPages, setSelectedPages] = useState([]);\n  const [imageUrls, setImageUrls] = useState([]);\n  useEffect(() => {\n    // Fetch images for all pages when component mounts\n    fetchPageImages();\n  }, []); // <-- Add an empty dependency array here\n\n  const fetchPageImages = async () => {\n    const urls = [];\n    for (let i = 0; i < numPages; i++) {\n      try {\n        const response = await axios.post(\"http://localhost:5000/extract\", {\n          filename: \"your-pdf-filename.pdf\",\n          selectedPages: [i + 1]\n        }, {\n          responseType: \"arraybuffer\"\n        });\n        const imageBase64 = Buffer.from(response.data, \"binary\").toString(\"base64\");\n        urls.push(`data:image/png;base64,${imageBase64}`);\n      } catch (error) {\n        console.error(\"Error fetching page image:\", error);\n      }\n    }\n    setImageUrls(urls);\n  };\n  const handlePageSelection = pageNumber => {\n    if (selectedPages.includes(pageNumber)) {\n      setSelectedPages(prevSelected => prevSelected.filter(page => page !== pageNumber));\n    } else {\n      setSelectedPages(prevSelected => [...prevSelected, pageNumber]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pdf-viewer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Number of Pages: \", numPages]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), imageUrls.map((imageUrl, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageUrl,\n        alt: `Page ${index + 1}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: selectedPages.includes(index + 1),\n          onChange: () => handlePageSelection(index + 1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), \"Page \", index + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => console.log(selectedPages),\n        children: \"Extract Pages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(PdfViewer, \"oCqwJiKNccDAduGJu9qCxJXUWkg=\");\n_c = PdfViewer;\nexport default PdfViewer;\nvar _c;\n$RefreshReg$(_c, \"PdfViewer\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","PdfViewer","numPages","pdfBase64","_s","selectedPages","setSelectedPages","imageUrls","setImageUrls","fetchPageImages","urls","i","response","post","filename","responseType","imageBase64","Buffer","from","data","toString","push","error","console","handlePageSelection","pageNumber","includes","prevSelected","filter","page","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","imageUrl","index","src","alt","type","checked","onChange","onClick","log","_c","$RefreshReg$"],"sources":["/Users/renjithroy/Documents/PDF Extractor/frontend/src/components/PdfViewer.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst PdfViewer = ({ numPages, pdfBase64 }) => {\n  const [selectedPages, setSelectedPages] = useState([]);\n  const [imageUrls, setImageUrls] = useState([]);\n\n  useEffect(() => {\n    // Fetch images for all pages when component mounts\n    fetchPageImages();\n  }, []); // <-- Add an empty dependency array here\n\n  const fetchPageImages = async () => {\n    const urls = [];\n\n    for (let i = 0; i < numPages; i++) {\n      try {\n        const response = await axios.post(\n          \"http://localhost:5000/extract\",\n          { filename: \"your-pdf-filename.pdf\", selectedPages: [i + 1] },\n          { responseType: \"arraybuffer\" }\n        );\n\n        const imageBase64 = Buffer.from(response.data, \"binary\").toString(\n          \"base64\"\n        );\n        urls.push(`data:image/png;base64,${imageBase64}`);\n      } catch (error) {\n        console.error(\"Error fetching page image:\", error);\n      }\n    }\n\n    setImageUrls(urls);\n  };\n\n  const handlePageSelection = (pageNumber) => {\n    if (selectedPages.includes(pageNumber)) {\n      setSelectedPages((prevSelected) =>\n        prevSelected.filter((page) => page !== pageNumber)\n      );\n    } else {\n      setSelectedPages((prevSelected) => [...prevSelected, pageNumber]);\n    }\n  };\n\n  return (\n    <div className=\"pdf-viewer\">\n      <h2>Number of Pages: {numPages}</h2>\n      {imageUrls.map((imageUrl, index) => (\n        <div key={index}>\n          <img src={imageUrl} alt={`Page ${index + 1}`} />\n          <label>\n            <input\n              type=\"checkbox\"\n              checked={selectedPages.includes(index + 1)}\n              onChange={() => handlePageSelection(index + 1)}\n            />\n            Page {index + 1}\n          </label>\n        </div>\n      ))}\n      <div>\n        <button onClick={() => console.log(selectedPages)}>\n          Extract Pages\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default PdfViewer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}