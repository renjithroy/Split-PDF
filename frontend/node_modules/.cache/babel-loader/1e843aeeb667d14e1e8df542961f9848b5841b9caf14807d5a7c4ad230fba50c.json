{"ast":null,"code":"var _jsxFileName = \"/Users/renjithroy/Documents/PDF Extractor/frontend/src/components/PageSelector.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PageSelector = ({\n  numPages,\n  onSelectedPagesChange\n}) => {\n  _s();\n  const [selectedPages, setSelectedPages] = useState([]);\n  const handlePageSelection = pageNumber => {\n    setSelectedPages(prevSelected => prevSelected.includes(pageNumber) ? prevSelected.filter(page => page !== pageNumber) : [...prevSelected, pageNumber]);\n  };\n  const handleSelectAllPages = () => {\n    setSelectedPages(Array.from({\n      length: numPages\n    }, (_, i) => i + 1));\n  };\n  const handleDeselectAllPages = () => {\n    setSelectedPages([]);\n  };\n\n  // Notify parent component about selected pages whenever the selection changes\n  // You can use this function to pass the selected pages back to the parent component\n  // and perform any further actions with the selected pages.\n  // For example, you can use this data to send the selected pages to the server and create the modified PDF.\n  // The onSelectedPagesChange function will be passed as a prop to this component.\n  // The parent component should define the onSelectedPagesChange function and handle the selected pages accordingly.\n  // For now, we are just logging the selected pages to the console.\n  // Replace the console.log with the appropriate function in your parent component.\n  // Example:\n  // const handleSelectedPagesChange = (selectedPages) => {\n  //   console.log(\"Selected Pages:\", selectedPages);\n  //   // You can perform any further actions with the selected pages here\n  // };\n\n  // Uncomment the line below and replace 'handleSelectedPagesChange' with your parent component's function\n  // useEffect(() => {\n  //   onSelectedPagesChange(selectedPages);\n  // }, [selectedPages, onSelectedPagesChange]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-selector\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Select Pages:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSelectAllPages,\n        children: \"Select All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDeselectAllPages,\n        children: \"Deselect All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), Array.from({\n        length: numPages\n      }, (_, i) => i + 1).map(pageNumber => /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: selectedPages.includes(pageNumber),\n          onChange: () => handlePageSelection(pageNumber)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this), \"Page \", pageNumber]\n      }, pageNumber, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(PageSelector, \"OVrwngAKdE15+Z+E8v/1N8VDIk4=\");\n_c = PageSelector;\nexport default PageSelector;\nvar _c;\n$RefreshReg$(_c, \"PageSelector\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PageSelector","numPages","onSelectedPagesChange","_s","selectedPages","setSelectedPages","handlePageSelection","pageNumber","prevSelected","includes","filter","page","handleSelectAllPages","Array","from","length","_","i","handleDeselectAllPages","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","type","checked","onChange","_c","$RefreshReg$"],"sources":["/Users/renjithroy/Documents/PDF Extractor/frontend/src/components/PageSelector.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst PageSelector = ({ numPages, onSelectedPagesChange }) => {\n    const [selectedPages, setSelectedPages] = useState([]);\n\n    const handlePageSelection = (pageNumber) => {\n        setSelectedPages((prevSelected) =>\n            prevSelected.includes(pageNumber)\n                ? prevSelected.filter((page) => page !== pageNumber)\n                : [...prevSelected, pageNumber]\n        );\n    };\n\n    const handleSelectAllPages = () => {\n        setSelectedPages(Array.from({ length: numPages }, (_, i) => i + 1));\n    };\n\n    const handleDeselectAllPages = () => {\n        setSelectedPages([]);\n    };\n\n    // Notify parent component about selected pages whenever the selection changes\n    // You can use this function to pass the selected pages back to the parent component\n    // and perform any further actions with the selected pages.\n    // For example, you can use this data to send the selected pages to the server and create the modified PDF.\n    // The onSelectedPagesChange function will be passed as a prop to this component.\n    // The parent component should define the onSelectedPagesChange function and handle the selected pages accordingly.\n    // For now, we are just logging the selected pages to the console.\n    // Replace the console.log with the appropriate function in your parent component.\n    // Example:\n    // const handleSelectedPagesChange = (selectedPages) => {\n    //   console.log(\"Selected Pages:\", selectedPages);\n    //   // You can perform any further actions with the selected pages here\n    // };\n\n    // Uncomment the line below and replace 'handleSelectedPagesChange' with your parent component's function\n    // useEffect(() => {\n    //   onSelectedPagesChange(selectedPages);\n    // }, [selectedPages, onSelectedPagesChange]);\n\n    return (\n        <div className=\"page-selector\">\n            <h2>Select Pages:</h2>\n            <div className=\"page-list\">\n                <button onClick={handleSelectAllPages}>Select All</button>\n                <button onClick={handleDeselectAllPages}>Deselect All</button>\n                {Array.from({ length: numPages }, (_, i) => i + 1).map((pageNumber) => (\n                    <label key={pageNumber}>\n                        <input\n                            type=\"checkbox\"\n                            checked={selectedPages.includes(pageNumber)}\n                            onChange={() => handlePageSelection(pageNumber)}\n                        />\n                        Page {pageNumber}\n                    </label>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default PageSelector;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,YAAY,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAsB,CAAC,KAAK;EAAAC,EAAA;EAC1D,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMS,mBAAmB,GAAIC,UAAU,IAAK;IACxCF,gBAAgB,CAAEG,YAAY,IAC1BA,YAAY,CAACC,QAAQ,CAACF,UAAU,CAAC,GAC3BC,YAAY,CAACE,MAAM,CAAEC,IAAI,IAAKA,IAAI,KAAKJ,UAAU,CAAC,GAClD,CAAC,GAAGC,YAAY,EAAED,UAAU,CACtC,CAAC;EACL,CAAC;EAED,MAAMK,oBAAoB,GAAGA,CAAA,KAAM;IAC/BP,gBAAgB,CAACQ,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAEd;IAAS,CAAC,EAAE,CAACe,CAAC,EAAEC,CAAC,KAAKA,CAAC,GAAG,CAAC,CAAC,CAAC;EACvE,CAAC;EAED,MAAMC,sBAAsB,GAAGA,CAAA,KAAM;IACjCb,gBAAgB,CAAC,EAAE,CAAC;EACxB,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA,oBACIN,OAAA;IAAKoB,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC1BrB,OAAA;MAAAqB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBzB,OAAA;MAAKoB,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACtBrB,OAAA;QAAQ0B,OAAO,EAAEb,oBAAqB;QAAAQ,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC1DzB,OAAA;QAAQ0B,OAAO,EAAEP,sBAAuB;QAAAE,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAC7DX,KAAK,CAACC,IAAI,CAAC;QAAEC,MAAM,EAAEd;MAAS,CAAC,EAAE,CAACe,CAAC,EAAEC,CAAC,KAAKA,CAAC,GAAG,CAAC,CAAC,CAACS,GAAG,CAAEnB,UAAU,iBAC9DR,OAAA;QAAAqB,QAAA,gBACIrB,OAAA;UACI4B,IAAI,EAAC,UAAU;UACfC,OAAO,EAAExB,aAAa,CAACK,QAAQ,CAACF,UAAU,CAAE;UAC5CsB,QAAQ,EAAEA,CAAA,KAAMvB,mBAAmB,CAACC,UAAU;QAAE;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnD,CAAC,SACG,EAACjB,UAAU;MAAA,GANRA,UAAU;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOf,CACV,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACrB,EAAA,CAzDIH,YAAY;AAAA8B,EAAA,GAAZ9B,YAAY;AA2DlB,eAAeA,YAAY;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}