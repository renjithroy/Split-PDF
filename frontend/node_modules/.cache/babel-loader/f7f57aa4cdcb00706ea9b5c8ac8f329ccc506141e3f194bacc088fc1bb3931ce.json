{"ast":null,"code":"var _jsxFileName = \"/Users/renjithroy/Documents/PDF Extractor/frontend/src/components/PdfViewer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PdfViewer = ({\n  numPages\n}) => {\n  _s();\n  const [selectedPages, setSelectedPages] = useState([]);\n  const handlePageSelection = pageNumber => {\n    if (selectedPages.includes(pageNumber)) {\n      setSelectedPages(prevSelected => prevSelected.filter(page => page !== pageNumber));\n    } else {\n      setSelectedPages(prevSelected => [...prevSelected, pageNumber]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pdf-viewer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Number of Pages: \", numPages]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Select pages to extract:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), Array.from({\n      length: numPages\n    }).map((_, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: selectedPages.includes(index + 1),\n        onChange: () => handlePageSelection(index + 1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this), \"Page \", index + 1]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => console.log(selectedPages),\n        children: \"Extract Pages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n_s(PdfViewer, \"OVrwngAKdE15+Z+E8v/1N8VDIk4=\");\n_c = PdfViewer;\nexport default PdfViewer;\nvar _c;\n$RefreshReg$(_c, \"PdfViewer\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PdfViewer","numPages","_s","selectedPages","setSelectedPages","handlePageSelection","pageNumber","includes","prevSelected","filter","page","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Array","from","length","map","_","index","type","checked","onChange","onClick","console","log","_c","$RefreshReg$"],"sources":["/Users/renjithroy/Documents/PDF Extractor/frontend/src/components/PdfViewer.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst PdfViewer = ({ numPages }) => {\n    const [selectedPages, setSelectedPages] = useState([]);\n\n    const handlePageSelection = (pageNumber) => {\n        if (selectedPages.includes(pageNumber)) {\n            setSelectedPages((prevSelected) =>\n                prevSelected.filter((page) => page !== pageNumber)\n            );\n        } else {\n            setSelectedPages((prevSelected) => [...prevSelected, pageNumber]);\n        }\n    };\n\n    return (\n        <div className=\"pdf-viewer\">\n            <h2>Number of Pages: {numPages}</h2>\n            <h3>Select pages to extract:</h3>\n            {Array.from({ length: numPages }).map((_, index) => (\n                <label key={index}>\n                    <input\n                        type=\"checkbox\"\n                        checked={selectedPages.includes(index + 1)}\n                        onChange={() => handlePageSelection(index + 1)}\n                    />\n                    Page {index + 1}\n                </label>\n            ))}\n            <div>\n                <button onClick={() => console.log(selectedPages)}>Extract Pages</button>\n            </div>\n        </div>\n    );\n};\n\nexport default PdfViewer;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAChC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMQ,mBAAmB,GAAIC,UAAU,IAAK;IACxC,IAAIH,aAAa,CAACI,QAAQ,CAACD,UAAU,CAAC,EAAE;MACpCF,gBAAgB,CAAEI,YAAY,IAC1BA,YAAY,CAACC,MAAM,CAAEC,IAAI,IAAKA,IAAI,KAAKJ,UAAU,CACrD,CAAC;IACL,CAAC,MAAM;MACHF,gBAAgB,CAAEI,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAEF,UAAU,CAAC,CAAC;IACrE;EACJ,CAAC;EAED,oBACIP,OAAA;IAAKY,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACvBb,OAAA;MAAAa,QAAA,GAAI,mBAAiB,EAACX,QAAQ;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACpCjB,OAAA;MAAAa,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChCC,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAElB;IAAS,CAAC,CAAC,CAACmB,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,kBAC3CvB,OAAA;MAAAa,QAAA,gBACIb,OAAA;QACIwB,IAAI,EAAC,UAAU;QACfC,OAAO,EAAErB,aAAa,CAACI,QAAQ,CAACe,KAAK,GAAG,CAAC,CAAE;QAC3CG,QAAQ,EAAEA,CAAA,KAAMpB,mBAAmB,CAACiB,KAAK,GAAG,CAAC;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD,CAAC,SACG,EAACM,KAAK,GAAG,CAAC;IAAA,GANPA,KAAK;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOV,CACV,CAAC,eACFjB,OAAA;MAAAa,QAAA,eACIb,OAAA;QAAQ2B,OAAO,EAAEA,CAAA,KAAMC,OAAO,CAACC,GAAG,CAACzB,aAAa,CAAE;QAAAS,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACd,EAAA,CAhCIF,SAAS;AAAA6B,EAAA,GAAT7B,SAAS;AAkCf,eAAeA,SAAS;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}