{"ast":null,"code":"var _jsxFileName = \"/Users/renjithroy/Documents/PDF Extractor/frontend/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [numPages, setNumPages] = useState(null);\n  const [selectedPages, setSelectedPages] = useState([]);\n  useEffect(() => {\n    // Fetch the number of pages from the backend once the file is selected\n    if (selectedFile) {\n      const formData = new FormData();\n      formData.append(\"pdfFile\", selectedFile);\n      axios.post(\"http://localhost:5000/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(response => {\n        const numPages = response.data.numPages;\n        setNumPages(numPages);\n      }).catch(error => {\n        console.error(\"Error fetching numPages:\", error);\n      });\n    }\n  }, [selectedFile]);\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handleCheckboxChange = (event, page) => {\n    const isChecked = event.target.checked;\n    setSelectedPages(prevSelectedPages => isChecked ? [...prevSelectedPages, page] : prevSelectedPages.filter(p => p !== page));\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!selectedFile) {\n      alert(\"Please select a PDF file.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"pdfFile\", selectedFile);\n    try {\n      const response = await axios.post(\"http://localhost:5000/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      console.log(response.data); // Log the response from the backend\n\n      // Now, create another Axios request to upload the selectedPages data\n      const selectedPagesData = {\n        selectedPages: selectedPages\n      };\n      const selectedPagesResponse = await axios.post(\"http://localhost:5000/saveSelectedPages\", selectedPagesData, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      console.log(\"Selected pages data saved successfully:\", selectedPagesResponse.data);\n    } catch (error) {\n      alert(\"Error uploading the file:\", error);\n      // Handle errors, show error messages, etc.\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Extract Pages from your PDF!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          className: \"form-control-file\",\n          name: \"pdfFile\",\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), numPages !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Select Pages to Include:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), Array.from({\n            length: numPages\n          }, (_, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Page \", index + 1, /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              className: \"form-checkbox\",\n              name: \"selectCheckbox\",\n              checked: selectedPages.includes(index + 1),\n              onChange: event => handleCheckboxChange(event, index + 1)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Submit PDF\",\n          className: \"btn btn-default\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XCxtoANiVcWgwhC3DfH4rEs1aG4=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","selectedFile","setSelectedFile","numPages","setNumPages","selectedPages","setSelectedPages","formData","FormData","append","post","headers","then","response","data","catch","error","console","handleFileChange","event","target","files","handleCheckboxChange","page","isChecked","checked","prevSelectedPages","filter","p","handleSubmit","preventDefault","alert","log","selectedPagesData","selectedPagesResponse","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","name","onChange","Array","from","length","_","index","includes","value","_c","$RefreshReg$"],"sources":["/Users/renjithroy/Documents/PDF Extractor/frontend/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport './App.css';\n\nexport default function App() {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [numPages, setNumPages] = useState(null);\n  const [selectedPages, setSelectedPages] = useState([]);\n\n  useEffect(() => {\n    // Fetch the number of pages from the backend once the file is selected\n    if (selectedFile) {\n      const formData = new FormData();\n      formData.append(\"pdfFile\", selectedFile);\n\n      axios.post(\"http://localhost:5000/upload\", formData, {\n        headers: { \"Content-Type\": \"multipart/form-data\" },\n      })\n        .then(response => {\n          const numPages = response.data.numPages;\n          setNumPages(numPages);\n        })\n        .catch(error => {\n          console.error(\"Error fetching numPages:\", error);\n        });\n    }\n  }, [selectedFile]);\n\n  const handleFileChange = (event) => {\n    setSelectedFile(event.target.files[0]);\n  };\n\n  const handleCheckboxChange = (event, page) => {\n    const isChecked = event.target.checked;\n    setSelectedPages((prevSelectedPages) =>\n      isChecked\n        ? [...prevSelectedPages, page]\n        : prevSelectedPages.filter((p) => p !== page)\n    );\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    if (!selectedFile) {\n      alert(\"Please select a PDF file.\");\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append(\"pdfFile\", selectedFile);\n\n    try {\n      const response = await axios.post(\"http://localhost:5000/upload\", formData, {\n        headers: { \"Content-Type\": \"multipart/form-data\" },\n      });\n\n      console.log(response.data); // Log the response from the backend\n\n      // Now, create another Axios request to upload the selectedPages data\n      const selectedPagesData = {\n        selectedPages: selectedPages,\n      };\n\n      const selectedPagesResponse = await axios.post(\"http://localhost:5000/saveSelectedPages\", selectedPagesData, {\n        headers: { \"Content-Type\": \"application/json\" },\n      });\n\n      console.log(\"Selected pages data saved successfully:\", selectedPagesResponse.data);\n\n\n    } catch (error) {\n      alert(\"Error uploading the file:\", error);\n      // Handle errors, show error messages, etc.\n    }\n  };\n\n  return (\n    <div className=\"main\">\n      <h1>Extract Pages from your PDF!</h1>\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <input type=\"file\" className=\"form-control-file\" name=\"pdfFile\" onChange={handleFileChange} />\n          <br />\n          {numPages !== null && (\n            <div>\n              <p>Select Pages to Include:</p>\n              {Array.from({ length: numPages }, (_, index) => (\n                <label key={index}>\n                  Page {index + 1}\n                  <input\n                    type=\"checkbox\"\n                    className=\"form-checkbox\"\n                    name=\"selectCheckbox\"\n                    checked={selectedPages.includes(index + 1)}\n                    onChange={(event) => handleCheckboxChange(event, index + 1)}\n                  />\n                </label>\n              ))}\n            </div>\n          )}\n          <input type=\"submit\" value=\"Submit PDF\" className=\"btn btn-default\" />\n        </div>\n      </form>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}