{"ast":null,"code":"var _jsxFileName = \"/Users/renjithroy/Documents/PDF Extractor/frontend/src/components/PdfViewer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PdfViewer = ({\n  numPages,\n  images\n}) => {\n  _s();\n  const [selectedPages, setSelectedPages] = useState([]);\n  const handlePageSelection = pageNumber => {\n    if (selectedPages.includes(pageNumber)) {\n      setSelectedPages(prevSelected => prevSelected.filter(page => page !== pageNumber));\n    } else {\n      setSelectedPages(prevSelected => [...prevSelected, pageNumber]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pdf-viewer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Number of Pages: \", numPages]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), images.map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        alt: `Page ${index + 1}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: selectedPages.includes(index + 1),\n          onChange: () => handlePageSelection(index + 1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), \"Page \", index + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => console.log(selectedPages),\n        children: \"Extract Pages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(PdfViewer, \"OVrwngAKdE15+Z+E8v/1N8VDIk4=\");\n_c = PdfViewer;\nexport default PdfViewer;\nvar _c;\n$RefreshReg$(_c, \"PdfViewer\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PdfViewer","numPages","images","_s","selectedPages","setSelectedPages","handlePageSelection","pageNumber","includes","prevSelected","filter","page","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","image","index","src","alt","type","checked","onChange","onClick","console","log","_c","$RefreshReg$"],"sources":["/Users/renjithroy/Documents/PDF Extractor/frontend/src/components/PdfViewer.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst PdfViewer = ({ numPages, images }) => {\n\n  const [selectedPages, setSelectedPages] = useState([]);\n\n  const handlePageSelection = (pageNumber) => {\n    if (selectedPages.includes(pageNumber)) {\n      setSelectedPages((prevSelected) =>\n        prevSelected.filter((page) => page !== pageNumber)\n      );\n    } else {\n      setSelectedPages((prevSelected) => [...prevSelected, pageNumber]);\n    }\n  };\n\n  return (\n    <div className=\"pdf-viewer\">\n      <h2>Number of Pages: {numPages}</h2>\n      {images.map((image, index) => (\n        <div key={index}>\n          <img src={image} alt={`Page ${index + 1}`} />\n          <label>\n            <input\n              type=\"checkbox\"\n              checked={selectedPages.includes(index + 1)}\n              onChange={() => handlePageSelection(index + 1)}\n            />\n            Page {index + 1}\n          </label>\n        </div>\n      ))}\n      <div>\n        <button onClick={() => console.log(selectedPages)}>Extract Pages</button>\n      </div>\n    </div>\n  );\n};\n\nexport default PdfViewer;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,SAAS,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAE1C,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMS,mBAAmB,GAAIC,UAAU,IAAK;IAC1C,IAAIH,aAAa,CAACI,QAAQ,CAACD,UAAU,CAAC,EAAE;MACtCF,gBAAgB,CAAEI,YAAY,IAC5BA,YAAY,CAACC,MAAM,CAAEC,IAAI,IAAKA,IAAI,KAAKJ,UAAU,CACnD,CAAC;IACH,CAAC,MAAM;MACLF,gBAAgB,CAAEI,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAEF,UAAU,CAAC,CAAC;IACnE;EACF,CAAC;EAED,oBACER,OAAA;IAAKa,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzBd,OAAA;MAAAc,QAAA,GAAI,mBAAiB,EAACZ,QAAQ;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACnCf,MAAM,CAACgB,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACvBrB,OAAA;MAAAc,QAAA,gBACEd,OAAA;QAAKsB,GAAG,EAAEF,KAAM;QAACG,GAAG,EAAG,QAAOF,KAAK,GAAG,CAAE;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7ClB,OAAA;QAAAc,QAAA,gBACEd,OAAA;UACEwB,IAAI,EAAC,UAAU;UACfC,OAAO,EAAEpB,aAAa,CAACI,QAAQ,CAACY,KAAK,GAAG,CAAC,CAAE;UAC3CK,QAAQ,EAAEA,CAAA,KAAMnB,mBAAmB,CAACc,KAAK,GAAG,CAAC;QAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChD,CAAC,SACG,EAACG,KAAK,GAAG,CAAC;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC;IAAA,GATAG,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAUV,CACN,CAAC,eACFlB,OAAA;MAAAc,QAAA,eACEd,OAAA;QAAQ2B,OAAO,EAAEA,CAAA,KAAMC,OAAO,CAACC,GAAG,CAACxB,aAAa,CAAE;QAAAS,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACd,EAAA,CAnCIH,SAAS;AAAA6B,EAAA,GAAT7B,SAAS;AAqCf,eAAeA,SAAS;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}