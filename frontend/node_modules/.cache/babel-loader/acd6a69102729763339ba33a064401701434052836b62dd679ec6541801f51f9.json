{"ast":null,"code":"var _jsxFileName = \"/Users/renjithroy/Documents/PDF Extractor/frontend/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { PDFDocument } from \"pdf-lib\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [numPages, setNumPages] = useState(null);\n  const [selectedPages, setSelectedPages] = useState([]);\n  useEffect(() => {\n    if (selectedFile) {\n      const reader = new FileReader();\n      reader.onload = async () => {\n        const pdfBuffer = reader.result;\n        const pdfDoc = await PDFDocument.load(pdfBuffer);\n        const numPages = pdfDoc.getPageCount();\n        console.log(\"Frontend Page no: \" + numPages);\n        setNumPages(numPages);\n      };\n      reader.readAsArrayBuffer(selectedFile);\n    }\n  }, [selectedFile]);\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handleCheckboxChange = (event, page) => {\n    const isChecked = event.target.checked;\n    const pageNumber = page;\n    setSelectedPages(prevSelectedPages => isChecked ? [...prevSelectedPages, pageNumber] : prevSelectedPages.filter(p => p !== pageNumber));\n  };\n  const handleDownload = async () => {\n    if (!selectedFile) {\n      alert(\"Please select a PDF file.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"pdfFile\", selectedFile);\n    const selectedPagesData = {\n      selectedPages: selectedPages\n    };\n    try {\n      const response = await axios.post(\"http://localhost:5000/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        },\n        params: selectedPagesData,\n        responseType: \"arraybuffer\" // Use responseType as \"arraybuffer\"\n      });\n\n      // Create a Blob from the response data\n      const blob = new Blob([response.data], {\n        type: \"application/pdf\"\n      });\n\n      // Create a URL for the Blob and use it to trigger the download\n      const url = window.URL.createObjectURL(blob);\n\n      // Open the URL in a new window to allow the user to download the file\n      window.open(url);\n    } catch (error) {\n      alert(\"Error uploading the file:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Extract Pages from your PDF!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          className: \"form-control-file\",\n          name: \"pdfFile\",\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), numPages !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Select Pages to Include:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), Array.from({\n            length: numPages\n          }, (_, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Page \", index + 1, /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              className: \"form-checkbox\",\n              name: \"selectCheckbox\",\n              checked: selectedPages.includes(index + 1),\n              onChange: event => handleCheckboxChange(event, index + 1)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleDownload,\n          className: \"btn btn-default\",\n          children: \"Download Modified PDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XCxtoANiVcWgwhC3DfH4rEs1aG4=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","PDFDocument","jsxDEV","_jsxDEV","App","_s","selectedFile","setSelectedFile","numPages","setNumPages","selectedPages","setSelectedPages","reader","FileReader","onload","pdfBuffer","result","pdfDoc","load","getPageCount","console","log","readAsArrayBuffer","handleFileChange","event","target","files","handleCheckboxChange","page","isChecked","checked","pageNumber","prevSelectedPages","filter","p","handleDownload","alert","formData","FormData","append","selectedPagesData","response","post","headers","params","responseType","blob","Blob","data","type","url","window","URL","createObjectURL","open","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","onChange","Array","from","length","_","index","includes","onClick","_c","$RefreshReg$"],"sources":["/Users/renjithroy/Documents/PDF Extractor/frontend/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { PDFDocument } from \"pdf-lib\";\nimport \"./App.css\";\n\nexport default function App() {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [numPages, setNumPages] = useState(null);\n  const [selectedPages, setSelectedPages] = useState([]);\n\n  useEffect(() => {\n    if (selectedFile) {\n      const reader = new FileReader();\n\n      reader.onload = async () => {\n        const pdfBuffer = reader.result;\n        const pdfDoc = await PDFDocument.load(pdfBuffer);\n        const numPages = pdfDoc.getPageCount();\n        console.log(\"Frontend Page no: \" + numPages);\n        setNumPages(numPages);\n      };\n\n      reader.readAsArrayBuffer(selectedFile);\n    }\n  }, [selectedFile]);\n\n  const handleFileChange = (event) => {\n    setSelectedFile(event.target.files[0]);\n  };\n\n  const handleCheckboxChange = (event, page) => {\n    const isChecked = event.target.checked;\n    const pageNumber = page;\n\n    setSelectedPages((prevSelectedPages) =>\n      isChecked\n        ? [...prevSelectedPages, pageNumber]\n        : prevSelectedPages.filter((p) => p !== pageNumber)\n    );\n  };\n\n  const handleDownload = async () => {\n    if (!selectedFile) {\n      alert(\"Please select a PDF file.\");\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append(\"pdfFile\", selectedFile);\n\n    const selectedPagesData = {\n      selectedPages: selectedPages,\n    };\n\n    try {\n      const response = await axios.post(\n        \"http://localhost:5000/upload\",\n        formData,\n        {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n          params: selectedPagesData,\n          responseType: \"arraybuffer\", // Use responseType as \"arraybuffer\"\n        }\n      );\n\n      // Create a Blob from the response data\n      const blob = new Blob([response.data], { type: \"application/pdf\" });\n\n      // Create a URL for the Blob and use it to trigger the download\n      const url = window.URL.createObjectURL(blob);\n\n      // Open the URL in a new window to allow the user to download the file\n      window.open(url);\n\n    } catch (error) {\n      alert(\"Error uploading the file:\", error);\n    }\n  };\n\n  return (\n    <div className=\"main\">\n      <h1>Extract Pages from your PDF!</h1>\n      <form>\n        <div className=\"form-group\">\n          <input type=\"file\" className=\"form-control-file\" name=\"pdfFile\" onChange={handleFileChange} />\n          <br />\n          {numPages !== null && (\n            <div>\n              <p>Select Pages to Include:</p>\n              {Array.from({ length: numPages }, (_, index) => (\n                <label key={index}>\n                  Page {index + 1}\n                  <input\n                    type=\"checkbox\"\n                    className=\"form-checkbox\"\n                    name=\"selectCheckbox\"\n                    checked={selectedPages.includes(index + 1)}\n                    onChange={(event) => handleCheckboxChange(event, index + 1)}\n                  />\n                </label>\n              ))}\n            </div>\n          )}\n          <button type=\"button\" onClick={handleDownload} className=\"btn btn-default\">\n            Download Modified PDF\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}