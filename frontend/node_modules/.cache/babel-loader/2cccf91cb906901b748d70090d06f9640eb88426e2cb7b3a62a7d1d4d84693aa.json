{"ast":null,"code":"var _jsxFileName = \"/Users/renjithroy/Documents/PDF Extractor/frontend/src/components/PdfViewer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PdfViewer = ({\n  numPages,\n  pdfBase64,\n  pdfImageUrls\n}) => {\n  _s();\n  const [selectedPages, setSelectedPages] = useState([]);\n  const [images, setImages] = useState([]); // Add images state\n\n  const handlePageSelection = pageNumber => {\n    if (selectedPages.includes(pageNumber)) {\n      setSelectedPages(prevSelected => prevSelected.filter(page => page !== pageNumber));\n    } else {\n      setSelectedPages(prevSelected => [...prevSelected, pageNumber]);\n    }\n  };\n  useEffect(() => {\n    fetchPageImages();\n  }, []);\n  const fetchPageImages = async () => {\n    try {\n      const imagePromises = pdfImageUrls.map(url => axios.get(url, {\n        responseType: \"blob\"\n      }));\n      const imageResponses = await Promise.all(imagePromises);\n      const images = imageResponses.map(response => {\n        const blobUrl = URL.createObjectURL(response.data);\n        return blobUrl;\n      });\n      setImages(images);\n    } catch (error) {\n      console.error(\"Error fetching page images:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pdf-viewer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Number of Pages: \", numPages]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), images.map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        alt: `Page ${index + 1}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: selectedPages.includes(index + 1),\n          onChange: () => handlePageSelection(index + 1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this), \"Page \", index + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => console.log(selectedPages),\n        children: \"Extract Pages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(PdfViewer, \"FU/CK+abJwtRuqGKpgGeoI9La58=\");\n_c = PdfViewer;\nexport default PdfViewer;\nvar _c;\n$RefreshReg$(_c, \"PdfViewer\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","PdfViewer","numPages","pdfBase64","pdfImageUrls","_s","selectedPages","setSelectedPages","images","setImages","handlePageSelection","pageNumber","includes","prevSelected","filter","page","fetchPageImages","imagePromises","map","url","get","responseType","imageResponses","Promise","all","response","blobUrl","URL","createObjectURL","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","image","index","src","alt","type","checked","onChange","onClick","log","_c","$RefreshReg$"],"sources":["/Users/renjithroy/Documents/PDF Extractor/frontend/src/components/PdfViewer.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst PdfViewer = ({ numPages, pdfBase64, pdfImageUrls }) => {\n    const [selectedPages, setSelectedPages] = useState([]);\n    const [images, setImages] = useState([]); // Add images state\n\n    const handlePageSelection = (pageNumber) => {\n        if (selectedPages.includes(pageNumber)) {\n            setSelectedPages((prevSelected) =>\n                prevSelected.filter((page) => page !== pageNumber)\n            );\n        } else {\n            setSelectedPages((prevSelected) => [...prevSelected, pageNumber]);\n        }\n    };\n\n    useEffect(() => {\n        fetchPageImages();\n    }, []);\n\n    const fetchPageImages = async () => {\n        try {\n            const imagePromises = pdfImageUrls.map((url) =>\n                axios.get(url, { responseType: \"blob\" })\n            );\n            const imageResponses = await Promise.all(imagePromises);\n            const images = imageResponses.map((response) => {\n                const blobUrl = URL.createObjectURL(response.data);\n                return blobUrl;\n            });\n            setImages(images);\n        } catch (error) {\n            console.error(\"Error fetching page images:\", error);\n        }\n    };\n\n    return (\n        <div className=\"pdf-viewer\">\n            <h2>Number of Pages: {numPages}</h2>\n            {images.map((image, index) => (\n                <div key={index}>\n                    <img src={image} alt={`Page ${index + 1}`} />\n                    <label>\n                        <input\n                            type=\"checkbox\"\n                            checked={selectedPages.includes(index + 1)}\n                            onChange={() => handlePageSelection(index + 1)}\n                        />\n                        Page {index + 1}\n                    </label>\n                </div>\n            ))}\n            <div>\n                <button onClick={() => console.log(selectedPages)}>Extract Pages</button>\n            </div>\n        </div>\n    );\n};\n\nexport default PdfViewer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}