{"ast":null,"code":"var _jsxFileName = \"/Users/renjithroy/Documents/PDF Extractor/frontend/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport PdfViewer from \"./components/PdfViewer\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!selectedFile) {\n      alert(\"Please select a PDF file.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"pdfFile\", selectedFile);\n    console.log(formData);\n    try {\n      const response = await axios.post(\"http://localhost:5000/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      console.log(response.data); // Log the response from the backend\n\n      const numPages = response.data.numPages;\n      console.log(response.data.numPages);\n      // Handle the response and display the visual representation of all pages\n      // and enable page selection as needed\n    } catch (error) {\n      alert(\"Error uploading the file:\", error);\n      // Handle errors, show error messages, etc.\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Extract Pages from your PDF!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          className: \"form-control-file\",\n          name: \"pdfFile\",\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Submit PDF\",\n          className: \"btn btn-default\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"cz3B5sQOxlrekAnUFUPeMaA2gqY=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","PdfViewer","jsxDEV","_jsxDEV","App","_s","selectedFile","setSelectedFile","handleFileChange","event","target","files","handleSubmit","preventDefault","alert","formData","FormData","append","console","log","response","post","headers","data","numPages","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","name","onChange","value","_c","$RefreshReg$"],"sources":["/Users/renjithroy/Documents/PDF Extractor/frontend/src/App.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport PdfViewer from \"./components/PdfViewer\";\nimport './App.css';\n\nexport default function App() {\n  const [selectedFile, setSelectedFile] = useState(null);\n\n  const handleFileChange = (event) => {\n    setSelectedFile(event.target.files[0]);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    if (!selectedFile) {\n      alert(\"Please select a PDF file.\");\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append(\"pdfFile\", selectedFile);\n\n    console.log(formData);\n\n    try {\n      const response = await axios.post(\"http://localhost:5000/upload\", formData, {\n        headers: { \"Content-Type\": \"multipart/form-data\" },\n      });\n\n      console.log(response.data); // Log the response from the backend\n\n      const numPages = response.data.numPages;\n      console.log(response.data.numPages);\n      // Handle the response and display the visual representation of all pages\n      // and enable page selection as needed\n\n    } catch (error) {\n      alert(\"Error uploading the file:\", error);\n      // Handle errors, show error messages, etc.\n    }\n  };\n\n  return (\n    <div className=\"main\">\n      <h1>Extract Pages from your PDF!</h1>\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <input type=\"file\" className=\"form-control-file\" name=\"pdfFile\" onChange={handleFileChange} />\n          <br />\n          <input type=\"submit\" value=\"Submit PDF\" className=\"btn btn-default\" />\n        </div>\n      </form>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMS,gBAAgB,GAAIC,KAAK,IAAK;IAClCF,eAAe,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EACxC,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOH,KAAK,IAAK;IACpCA,KAAK,CAACI,cAAc,CAAC,CAAC;IAEtB,IAAI,CAACP,YAAY,EAAE;MACjBQ,KAAK,CAAC,2BAA2B,CAAC;MAClC;IACF;IAEA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAEX,YAAY,CAAC;IAExCY,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;IAErB,IAAI;MACF,MAAMK,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,IAAI,CAAC,8BAA8B,EAAEN,QAAQ,EAAE;QAC1EO,OAAO,EAAE;UAAE,cAAc,EAAE;QAAsB;MACnD,CAAC,CAAC;MAEFJ,OAAO,CAACC,GAAG,CAACC,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC;;MAE5B,MAAMC,QAAQ,GAAGJ,QAAQ,CAACG,IAAI,CAACC,QAAQ;MACvCN,OAAO,CAACC,GAAG,CAACC,QAAQ,CAACG,IAAI,CAACC,QAAQ,CAAC;MACnC;MACA;IAEF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdX,KAAK,CAAC,2BAA2B,EAAEW,KAAK,CAAC;MACzC;IACF;EACF,CAAC;;EAED,oBACEtB,OAAA;IAAKuB,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBxB,OAAA;MAAAwB,QAAA,EAAI;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrC5B,OAAA;MAAM6B,QAAQ,EAAEpB,YAAa;MAAAe,QAAA,eAC3BxB,OAAA;QAAKuB,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzBxB,OAAA;UAAO8B,IAAI,EAAC,MAAM;UAACP,SAAS,EAAC,mBAAmB;UAACQ,IAAI,EAAC,SAAS;UAACC,QAAQ,EAAE3B;QAAiB;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC9F5B,OAAA;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACN5B,OAAA;UAAO8B,IAAI,EAAC,QAAQ;UAACG,KAAK,EAAC,YAAY;UAACV,SAAS,EAAC;QAAiB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAAC1B,EAAA,CAlDuBD,GAAG;AAAAiC,EAAA,GAAHjC,GAAG;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}